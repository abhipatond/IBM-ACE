

	CREATE COMPUTE MODULE encmsgflw_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE ref REFERENCE TO InputBody;
		
		DECLARE Request,privetkey CHARACTER ;
		
		DECLARE ccsid INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE encod INTEGER InputRoot.Properties.Encoding;
		
		--SET Request = getpayload(ref);
		
		SET Request =CAST(ASBITSTREAM(InputBody CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding)AS CHARACTER);
		
		SET privetkey ='sreekanth ';
		
		DECLARE enc,dec CHARACTER ;
		
		
		CALL encrypt(Request,privetkey) INTO enc;
		CALL decrypt(enc,privetkey) INTO dec;
		
	

		
		DECLARE myMessage CHARACTER;
        SET myMessage = CAST( dec AS CHARACTER CCSID ccsid);
        CREATE LASTCHILD OF Environment DOMAIN('XMLNSC') PARSE (myMessage); 
       
       SET OutputRoot.XMLNSC.DATA.Encrypt=enc;
		SET OutputRoot.XMLNSC.DATA.Decrypt=Environment.XMLNSC;
	END;


CREATE PROCEDURE encrypt (IN originaltxt CHARACTER,IN key CHARACTER ) 
    RETURNS CHARACTER
	LANGUAGE JAVA
	EXTERNAL NAME"encryption.Encryption.encrypt";
	
	CREATE PROCEDURE decrypt (IN originaltxt CHARACTER,IN key CHARACTER ) 
    RETURNS CHARACTER
	LANGUAGE JAVA
	EXTERNAL NAME"decryption.Decryption.decrypt";
END MODULE;
