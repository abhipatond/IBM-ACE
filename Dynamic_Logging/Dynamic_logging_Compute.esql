
DECLARE reqId SHARED INTEGER 1;
CREATE COMPUTE MODULE Dynamic_logging_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot.DFDL.dynamiclogging.record.appName = CAST(ApplicationLabel AS CHARACTER CCSID 1208 ENCODING 546);
		SET OutputRoot.DFDL.dynamiclogging.record.mfName = CAST(MessageFlowLabel AS CHARACTER CCSID 1208 ENCODING 546);
		SET OutputRoot.DFDL.dynamiclogging.record.nodeName = CAST(BrokerName AS CHARACTER CCSID 1208 ENCODING 546);
		SET OutputRoot.DFDL.dynamiclogging.record.serverName = CAST(ExecutionGroupLabel AS CHARACTER CCSID 1208 ENCODING 546);
		SET OutputRoot.DFDL.dynamiclogging.record.channelId = 'NULL';
		SET OutputRoot.DFDL.dynamiclogging.record.requestId = CAST(reqId AS CHARACTER CCSID 1208 ENCODING 546);
--		SET OutputRoot.DFDL.dynamiclogging.record.requestTime = CAST(CURRENT_TIMESTAMP AS CHARACTER CCSID 1208 ENCODING 546);
		SET OutputRoot.DFDL.dynamiclogging.record.requestMsg = CAST(ASBITSTREAM(InputRoot.XMLNSC) AS CHARACTER CCSID 1208 ENCODING 546);
		SET OutputRoot.DFDL.dynamiclogging.record.responseTime = CAST(CURRENT_TIMESTAMP AS CHARACTER CCSID 1208 ENCODING 546);
		SET OutputRoot.JSON.Data = InputRoot.XMLNSC;
		SET OutputRoot.DFDL.dynamiclogging.record.responseMsg = CAST(ASBITSTREAM(OutputRoot.JSON.Data) AS CHARACTER CCSID 1208 ENCODING 546);
				
		SET OutputRoot.JSON = NULL;
		--SET OutputLocalEnvironment.Destination.File.Name = 'AuditLog_' || CAST(CURRENT_DATE AS CHARACTER FORMAT 'dd-MM-yyyy') || '.txt';
		propagate TO TERMINAL 'out';
		SET reqId = reqId + 1;
		
		SET OutputRoot.JSON.Data = InputRoot.XMLNSC;
		PROPAGATE TO TERMINAL 'out1';
	
	END;
END MODULE;

