

CREATE COMPUTE MODULE Database_logging_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
--		SET OutputRoot = InputRoot;
		DECLARE inref REFERENCE TO InputRoot.XMLNSC.Root;
		DECLARE mychar1,mychar2 CHARACTER;
		
		SET mychar1 = CAST(ASBITSTREAM(inref) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		
		CALL calldb(ApplicationLabel,MessageFlowLabel,CURRENT_TIMESTAMP,mychar1,'channel_request');
		
		SET OutputRoot.JSON.Data.Root = inref;
		
		DECLARE outref REFERENCE TO OutputRoot.JSON;
		
		SET mychar2 = CAST(ASBITSTREAM(outref) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		
		CALL calldb(ApplicationLabel,MessageFlowLabel,CURRENT_TIMESTAMP,mychar2,'host_request');
		

	END;
END MODULE;

CREATE PROCEDURE calldb (IN appname CHARACTER, IN mfname CHARACTER,IN logtime TIMESTAMP,IN msg CHARACTER,IN logtype CHARACTER )
LANGUAGE DATABASE
EXTERNAL NAME DB_LOGGING;

