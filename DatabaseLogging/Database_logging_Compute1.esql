
CREATE COMPUTE MODULE Database_logging_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		
		DECLARE inref REFERENCE TO InputRoot.JSON;
		DECLARE mychar,mychar2 CHARACTER;
		DECLARE msgLength1, msgLength2 INTEGER;
			

		SET mychar = CAST(ASBITSTREAM(inref) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		
		SET msgLength1 = LENGTH(mychar);

		CALL calldbl(ApplicationLabel,MessageFlowLabel,CURRENT_TIMESTAMP,mychar,'host_response');

		SET OutputRoot.XMLNSC.Root =InputRoot.JSON.Data.Root;

		DECLARE outref REFERENCE TO OutputRoot.XMLNSC;

		SET mychar2 = CAST(ASBITSTREAM(outref) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);

		CALL calldbl(ApplicationLabel,MessageFlowLabel,CURRENT_TIMESTAMP,mychar2,'channel_response');

	END;
END MODULE;

CREATE PROCEDURE calldbl (IN appname CHARACTER, IN mfname CHARACTER,IN logtime TIMESTAMP,IN msg CHARACTER,IN logtype CHARACTER )
LANGUAGE DATABASE
EXTERNAL NAME DB_LOGGING;